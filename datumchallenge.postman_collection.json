{
	"info": {
		"_postman_id": "c1db6bf9-f76a-443e-b5be-4618e8d4542c",
		"name": "DatumChallenge",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"ID must exist\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"createdAt must exist\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Datum QA\",\r\n    \"job\": \"QA Analyst\"\r\n}",
					"options": {
						"raw": {
							"language": "javascript"
						}
					}
				},
				"url": {
					"raw": "{{reqres}}/api/users",
					"host": [
						"{{reqres}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"ID must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"firstName must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.first_name).to.eql('Janet');\r",
							"});\r",
							"\r",
							"pm.test(\"lastName must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.last_name).to.eql('Weaver');\r",
							"});\r",
							"\r",
							"pm.test(\"Email must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.email).to.eql('janet.weaver@reqres.in');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{reqres}}/api/users/2",
					"host": [
						"{{reqres}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Page N% must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"});\r",
							"\r",
							"pm.test(\"Users per page must be 6\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"});\r",
							"\r",
							"pm.test(\"First user on list must be ID 7\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data[0].id).to.eql(7);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{reqres}}/api/users?page=2",
					"host": [
						"{{reqres}}"
					],
					"path": [
						"api",
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Name must match\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql('morpheus qa');\r",
							"});\r",
							"\r",
							"pm.test(\"Users per page must be 6\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.job).to.eql('zion resident qa');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus qa\",\r\n    \"job\": \"zion resident qa\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{reqres}}/api/users/2",
					"host": [
						"{{reqres}}"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	]
}